<!--
  #%L
  streams-eip-routes [org.apache.streams]
  %%
  Copyright (C) 2013 - 2014 Apache Streams Project
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<beans
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">


    <bean id="activityConsumerRouter" class="org.apache.streams.messaging.routers.impl.ActivityConsumerRouter">
        <property name="activityConsumerWarehouse" ref="activityConsumerWarehouse"/>
        <property name="camelContext" ref="context"/>
    </bean>

    <bean id="activityRegistrationProcessor"
          class="org.apache.streams.messaging.processors.ActivityPublisherRegistrationProcessor"/>


    <bean id="activityStreamsSubscriberRouter"
          class="org.apache.streams.messaging.routers.impl.ActivityStreamsSubscriberRouter">
        <property name="activityStreamsSubscriberWarehouse" ref="activityStreamsSubscriberWarehouse"/>
        <property name="camelContext" ref="context"/>
    </bean>

    <bean id="subscriberRegistrationProcessor"
          class="org.apache.streams.messaging.processors.ActivityStreamsSubscriberRegistrationProcessor">
        <constructor-arg ref="subscriptionService"/>
    </bean>

    <bean id="cassandraKeyspace" class="org.apache.streams.cassandra.repository.impl.CassandraKeyspace">
        <constructor-arg ref="cassandraConfig"/>
    </bean>

    <bean id="cassandraActivityStreamsRepository"
          class="org.apache.streams.cassandra.repository.impl.CassandraActivityStreamsRepository">
        <constructor-arg ref="cassandraKeyspace"/>
        <constructor-arg ref="cassandraConfig"/>
    </bean>

    <bean id="cassandraSubscriptionRepository"
          class="org.apache.streams.cassandra.repository.impl.CassandraSubscriptionRepository">
        <constructor-arg ref="cassandraKeyspace"/>
        <constructor-arg ref="cassandraConfig"/>
    </bean>

    <bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper"/>

    <bean id="subscriptionService" class="org.apache.streams.messaging.service.impl.CassandraSubscriptionService">
        <constructor-arg ref="cassandraSubscriptionRepository"/>
    </bean>

    <bean id="activityService" class="org.apache.streams.messaging.service.impl.CassandraActivityService">
        <constructor-arg ref="cassandraActivityStreamsRepository"/>
        <constructor-arg ref="objectMapper"/>
    </bean>

    <!--<bean id="stromActivityAggregator" class="org.apache.streams.messaging.storm.StormActivityAggregator">-->
        <!--<constructor-arg ref="bolt"/>-->
        <!--<constructor-arg ref="spout"/>-->
    <!--</bean>-->

    <!--<bean id="bolt" class="org.apache.streams.messaging.storm.StormSubscriberBolt"/>-->
    <!--<bean id="spout" class="org.apache.streams.messaging.storm.StormSubscriberSpout"/>-->

    <bean id="activityAggregator" class="org.apache.streams.messaging.aggregation.ActivityAggregator">
        <property name="activityService" ref="activityService"/>
        <property name="activityStreamsSubscriberWarehouse" ref="activityStreamsSubscriberWarehouse"/>
    </bean>

    <task:annotation-driven/>

    <bean id="jmsConnectionFactory"
          class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activemq.jmsConnectionFactoryUrl}"/>
    </bean>

    <bean id="pooledConnectionFactory"
          class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
        <property name="maxConnections" value="8"/>
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>

    <bean id="jmsConfig"
          class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
        <property name="concurrentConsumers" value="10"/>
    </bean>

    <bean id="activemq"
          class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig"/>
    </bean>


</beans>