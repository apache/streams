<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  streams-eip-routes [org.apache.streams]
  %%
  Copyright (C) 2013 - 2014 Apache Streams Project
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring-2.0.0.xsd
       http://www.springframework.org/schema/osgi
       http://www.springframework.org/schema/osgi/spring-osgi.xsd">




    <camelContext id="context" xmlns="http://camel.apache.org/schema/spring">

        <endpoint id="consumerRegistrationEndpoint" uri="${consumer.registrationEndpoint}"/>
        <endpoint id="subscriberRegistrationEndpoint" uri="${subscriber.registrationEndpoint}"/>
        <!--publisher registration route setup -->
        <route>
            <from uri="ref:consumerRegistrationEndpoint"/>
                <bean ref="activityRegistrationProcessor" />
            <to uri="direct:publisher-register"/>
        </route>

        <route>
            <from uri="direct:publisher-register"/>
                <bean ref="activityPublisherRegistration" method="register"/>
            <to uri="direct:add-publisher-route"/>
        </route>

        <route>
            <from uri="direct:add-publisher-route"/>
                <bean ref="activityConsumerRouter" method="createNewRouteForConsumer"/>
            <to uri="log:ExampleLog"/>
        </route>

        <!--split activities on Q, waiting for aggregation -->
        <route>
            <from uri="direct:activityQ"/>
            <inOnly uri="activemq:queue:activities"/>
        </route>

        <route>
            <from uri="activemq:queue:activities"/>
            <aggregate completionInterval="500" groupExchanges="true">
                <correlationExpression>
                    <constant>true</constant>
                </correlationExpression>
                <bean ref="activityService" method="receiveExchange"/>
            </aggregate>
        </route>


        <!-- register as a subscriber - returned the endpoint to poll and add to subscription sources - GET/POST -->
        <route>
            <from uri="ref:subscriberRegistrationEndpoint"/>
                <bean ref="subscriberRegistrationProcessor" />
            <to uri="direct:subscriber-register"/>
        </route>

        <route>
            <from uri="direct:subscriber-register"/>
                <bean ref="activityStreamsSubscriberRegistration" method="register"/>
            <to uri="direct:add-subscriber-route"/>
        </route>

        <route>
            <from uri="direct:add-subscriber-route"/>
            <bean ref="activityStreamsSubscriberRouter" method="createNewRouteForSubscriber"/>
            <to uri="log:ExampleLog"/>
        </route>


    </camelContext>

</beans>